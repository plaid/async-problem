#!/usr/bin/env bash

node_modules/.bin/babel await.js >await.compiled.js

passed="\033[0;32mpassed\033[0m\n"
failed="\033[0;31mfailed\033[0m\n"

test() {
  local actual
  local expected

  printf "Testing \033[0;36m%s\033[0m...\n" "$1"

  printf %s "- correct directory name...     "
  expected="$(printf "FOO\nBAR\nBAZ\n")"
  if ! actual="$(node --harmony "$1" input)" ; then
    printf "$failed"
  elif [[ "$actual" == "$expected" ]] ; then
    printf "$passed"
  else
    printf "$failed"
  fi

  printf %s "- incorrect directory name...   "
  expected="^Error: ENOENT[,:] .* 'XXX/index.txt'$"
  if actual="$(node --harmony "$1" XXX 2>&1 1>/dev/null)" ; then
    printf "$failed"
  elif [[ $? != 1 ]] ; then
    printf "$failed"
  elif [[ "$actual" =~ $expected ]] ; then
    printf "$passed"
  else
    printf "$failed"
  fi

  printf %s "- inaccurate index...           "
  rm -f -- input/baz.txt
  expected="^Error: ENOENT[,:] .* 'input/baz.txt'$"
  if actual="$(node --harmony "$1" input 2>&1 1>/dev/null)" ; then
    printf "$failed"
  elif [[ $? != 1 ]] ; then
    printf "$failed"
  elif [[ "$actual" =~ $expected ]] ; then
    printf "$passed"
  else
    printf "$failed"
  fi
  git checkout -- input/baz.txt

  echo
}

test synchronous.js
test callbacks.js
test async.js
test async-seq.js
test kgo.js
test righto.js
test promises.js
test promises-ramda.js
test bluebird-promisell.js
test most.js
test coroutines-co.js
test coroutines-bluebird.js
test await.compiled.js
test tasks.js
test lazy-either.js
